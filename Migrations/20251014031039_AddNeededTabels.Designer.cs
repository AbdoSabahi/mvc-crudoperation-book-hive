// <auto-generated />
using System;
using CRUDOperations.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CRUDOperations.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251014031039_AddNeededTabels")]
    partial class AddNeededTabels
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CRUDOperations.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AddedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("CRUDOperations.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            Name = "Books"
                        },
                        new
                        {
                            Id = 3,
                            IsActive = true,
                            Name = "Clothing"
                        },
                        new
                        {
                            Id = 4,
                            IsActive = true,
                            Name = "Sports"
                        },
                        new
                        {
                            Id = 5,
                            IsActive = true,
                            Name = "Toys"
                        },
                        new
                        {
                            Id = 6,
                            IsActive = true,
                            Name = "Furniture"
                        },
                        new
                        {
                            Id = 7,
                            IsActive = true,
                            Name = "Beauty"
                        },
                        new
                        {
                            Id = 8,
                            IsActive = true,
                            Name = "Food"
                        },
                        new
                        {
                            Id = 9,
                            IsActive = true,
                            Name = "Music"
                        },
                        new
                        {
                            Id = 10,
                            IsActive = true,
                            Name = "Movies"
                        });
                });

            modelBuilder.Entity("CRUDOperations.Models.Book", b =>
                {
                    b.HasOne("CRUDOperations.Models.Category", "Category")
                        .WithMany("Books")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("CRUDOperations.Models.Category", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
